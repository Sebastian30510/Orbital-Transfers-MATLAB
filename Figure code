%% Figure 1: Bi-Elliptic Transfer Plot
% Bi-Elliptic Transfer with Energy Sampling and Orbit Labels

mu = 1.32712440018e20; % Sun’s gravitational parameter, m^3/s^2
r1 = 1.496e11;         % Initial orbit radius (m)
r2 = 3.0e11;           % Final orbit radius (m)
r_m = 6.0e11;          % Intermediate apoapsis (m)

% Define ODE
two_body = @(t, y) [y(3); y(4); -mu*y(1)/norm(y(1:2))^3; -mu*y(2)/norm(y(1:2))^3];

% Phase 1: r1 → r_m
a1 = (r1 + r_m)/2;
v1 = sqrt(mu * (2/r1 - 1/a1));
y0_1 = [r1; 0; 0; v1];
T1 = pi * sqrt(a1^3 / mu);
[t1, y1] = ode113(two_body, [0 T1], y0_1);

% Phase 2: r_m → r2
rA = y1(end, 1:2)';
vA_dir = y1(end, 3:4)' / norm(y1(end, 3:4));
a2 = (r2 + r_m)/2;
v2_mag = sqrt(mu * (2/r_m - 1/a2));
y0_2 = [rA; vA_dir * v2_mag];
T2 = pi * sqrt(a2^3 / mu);
[t2, y2] = ode113(two_body, [0 T2], y0_2);

% Combine trajectory
t_full = [t1; t2 + t1(end)];
y_full = [y1; y2];

% Plot trajectory
figure; hold on; axis equal; grid on;
plot(y1(:,1)/1e9, y1(:,2)/1e9, 'b', 'LineWidth', 2);
plot(y2(:,1)/1e9, y2(:,2)/1e9, 'm', 'LineWidth', 2);

% Plot orbits
theta = linspace(0, 2*pi, 500);
plot(r1*cos(theta)/1e9, r1*sin(theta)/1e9, 'k--', 'DisplayName','Initial Orbit');
plot(r2*cos(theta)/1e9, r2*sin(theta)/1e9, 'r--', 'DisplayName','Final Orbit');
plot(r_m*cos(theta)/1e9, r_m*sin(theta)/1e9, 'g--', 'DisplayName','Transfer Orbit');

legend('Leg 1 (r1→r_m)', 'Leg 2 (r_m→r2)', 'Initial Orbit', 'Final Orbit', 'Intermediate Orbit');
xlabel('X (Gm)'); ylabel('Y (Gm)');
title('Bi-Elliptic Transfer Trajectory');

%% Figure 2: Hohmann Transfer Plot
r2 = 20000; % target orbit (km)
a_trans = (r1 + r2)/2;

v_per = sqrt(2*mu*r2 / (r1*(r1 + r2)));
v_ap = sqrt(2*mu*r1 / (r2*(r1 + r2)));

x2 = r2*cos(theta); y2 = r2*sin(theta);
r_hohmann = a_trans*(1 - (r1 - a_trans)/a_trans*cos(theta));
x_hoh = r_hohmann .* cos(theta); y_hoh = r_hohmann .* sin(theta);

figure; hold on; axis equal;
plot(x1, y1, 'b');
plot(x2, y2, 'r');
plot(x_hoh, y_hoh, '--k');
title('Hohmann Transfer');
legend('Initial Orbit', 'Final Orbit', 'Transfer Orbit');


%% Figure 3: Voyager Trajectory Comparison (Simplified)
% Assume orbits: Earth ~1 AU, Jupiter ~5.2 AU, Saturn ~9.5 AU
% Circular approx
AU = 1.496e8; % km
r_E = 1*AU; r_J = 5.2*AU; r_S = 9.5*AU;
theta = linspace(0, 2*pi, 500);

xE = r_E*cos(theta); yE = r_E*sin(theta);
xJ = r_J*cos(theta); yJ = r_J*sin(theta);
xS = r_S*cos(theta); yS = r_S*sin(theta);

% Simplified paths
x_voy = [r_E 2.5*AU 5.2*AU 9.5*AU];
y_voy = [0 0 0 0];

figure; hold on; axis equal;
plot(xE, yE, 'b');
plot(xJ, yJ, 'g');
plot(xS, yS, 'r');
plot(x_voy, y_voy, '--k');
title('Voyager Trajectory Comparison');
legend('Earth Orbit', 'Jupiter Orbit', 'Saturn Orbit', 'Voyager Path');


%% Figure 4: Lagrange Point Stability using R3BP Integration
% Earth-Moon system normalized units
mu = 0.01215; % Moon/(Earth+Moon)

% Define R3BP equations
r3bp = @(t, y) [
    y(3);
    y(4);
    2*y(4) + y(1) - (1 - mu)*(y(1)+mu)/((y(1)+mu)^2 + y(2)^2)^(3/2) - mu*(y(1)-1+mu)/((y(1)-1+mu)^2 + y(2)^2)^(3/2);
   -2*y(3) + y(2) - (1 - mu)*y(2)/((y(1)+mu)^2 + y(2)^2)^(3/2) - mu*y(2)/((y(1)-1+mu)^2 + y(2)^2)^(3/2)
];

% Initial condition: small perturbation near L4
x0 = 0.5 - mu;
y0 = sqrt(3)/2;
dx = 1e-3; dy = 1e-3;

IC = [x0+dx; y0+dy; 0; 0];
[t, sol] = ode45(r3bp, [0 20], IC);

figure; hold on; axis equal;
plot(0, 0, 'ko', 'MarkerSize', 10); % Earth
plot(1, 0, 'ko', 'MarkerSize', 10); % Moon
plot(sol(:,1), sol(:,2), 'b');
title('Lagrange Point L4 Stability (R3BP Simulation)');
xlabel('x'); ylabel('y');
legend('Earth', 'Moon', 'Trajectory near L4');


%% Figure 5: Gravitational Field Well Plot
% Gravitational acceleration: a = G*M / r^2
G = 6.67430e-20; % km^3/kg/s^2
M_sun = 1.989e30; % kg
r_vals = linspace(0.1, 40, 1000) * AU;
a_sun = G * M_sun ./ (r_vals.^2);

% Add planetary gravity (approx)
M_planets = [3.30e23, 4.87e24, 5.97e24, 6.42e23, 1.90e27];
r_planets = [0.387, 0.707, 1.0, 1.524, 5.2] * AU;

figure; hold on;
plot(r_vals/AU, a_sun, 'r');
for i = 1:length(M_planets)
    a_planet = G * M_planets(i) ./ ((r_vals - r_planets(i)).^2);
    plot(r_vals/AU, a_planet, 'b--');
end
title('Gravitational Field Strength vs Distance');
xlabel('Distance from Sun (AU)'); ylabel('Gravitational Acceleration (km/s^2)');
legend('Sun', 'Planets');
